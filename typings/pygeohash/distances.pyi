"""
This type stub file was generated by pyright.
"""

from typing import Dict, Final

"""Distance calculation functionality for geohashes.

This module provides functions for calculating distances between geohashes,
including both approximate distance based on matching characters and
precise haversine distance calculation.
"""
logger = ...
__author__: Final[str] = ...
_PRECISION: Final[Dict[int, float]] = ...
_EARTH_RADIUS: Final[float] = ...
def geohash_approximate_distance(geohash_1: str, geohash_2: str, check_validity: bool = ...) -> float:
    """Calculate the approximate great-circle distance between two geohashes.

    This function calculates an approximate distance based on the number of
    matching characters at the beginning of the geohashes. It's faster but
    less accurate than haversine distance.

    Args:
        geohash_1 (str): The first geohash.
        geohash_2 (str): The second geohash.
        check_validity (bool, optional): Whether to check if the geohashes are valid.
        Defaults to False.

    Returns:
        float: The approximate distance in meters.

    Raises:
        ValueError: If check_validity is True and either geohash is invalid.

    Example:
        >>> geohash_approximate_distance("u4pruyd", "u4pruyf")
        118.0
    """
    ...

def geohash_haversine_distance(geohash_1: str, geohash_2: str) -> float:
    """Calculate the haversine great-circle distance between two geohashes.

    This function provides a more accurate distance calculation using the
    haversine formula, which accounts for the Earth's curvature.

    Args:
        geohash_1 (str): The first geohash.
        geohash_2 (str): The second geohash.

    Returns:
        float: The distance in meters.

    Example:
        >>> geohash_haversine_distance("u4pruyd", "u4pruyf")
        152.3
    """
    ...

