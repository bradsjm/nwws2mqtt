"""
This type stub file was generated by pyright.
"""

from typing import Any, List, Optional, Tuple, TypeVar, Union
from typing_extensions import Protocol, TypeAlias

"""Visualization module for PyGeoHash.

This module provides functions for visualizing geohashes on maps.
It requires additional dependencies that can be installed with:
`pip install pygeohash[viz]`

Functions:
    plot_geohash: Plot a single geohash on a map
    plot_geohashes: Plot multiple geohashes on a map
    folium_map: Create an interactive map with geohashes using Folium
"""
FoliumMap: TypeAlias = Any
FoliumRectangle: TypeAlias = Any
FoliumElement: TypeAlias = Any
MatplotlibAxis: TypeAlias = Any
MatplotlibFigure: TypeAlias = Any
BoundingBoxCoords = Tuple[float, float, float, float]
T = TypeVar("T")
class FoliumMapProtocol(Protocol):
    """Protocol for Folium map objects."""
    location: Tuple[float, float]
    _zoom_start: int
    def add_child(self, child: FoliumElement, name: Optional[str] = ..., index: Optional[int] = ...) -> Any:
        ...
    
    def add_geohash(self, geohash: str, color: str = ..., fill: bool = ..., fill_color: Optional[str] = ..., fill_opacity: float = ..., weight: int = ..., popup: Optional[str] = ..., tooltip: Optional[str] = ...) -> Any:
        ...
    
    def add_geohashes(self, geohashes: List[str], colors: Union[str, List[str]] = ..., fill: bool = ..., fill_colors: Optional[List[str]] = ..., fill_opacity: float = ..., weight: int = ..., popups: Optional[List[str]] = ..., tooltips: Optional[List[str]] = ...) -> Any:
        ...
    
    def add_geohash_grid(self, precision: int = ..., bbox: Optional[BoundingBoxCoords] = ..., color: str = ..., fill: bool = ..., fill_color: Optional[str] = ..., fill_opacity: float = ..., weight: int = ...) -> Any:
        ...
    


def plot_geohash(geohash: str, ax: Optional[MatplotlibAxis] = ..., color: str = ..., alpha: float = ..., label: Optional[str] = ..., show_center: bool = ..., show_label: bool = ..., **kwargs: Any) -> Tuple[Optional[MatplotlibFigure], Optional[MatplotlibAxis]]:
    """Plot a single geohash on a map.

    Args:
        geohash: The geohash string to plot
        ax: Matplotlib axis to plot on (optional)
        color: Color of the geohash polygon
        alpha: Transparency of the geohash polygon
        label: Label for the geohash (defaults to the geohash string)
        show_center: Whether to show the center point of the geohash
        show_label: Whether to show the label on the map
        \**kwargs: Additional keyword arguments passed to matplotlib

    Returns:
        Tuple: (fig, ax) - The matplotlib figure and axis objects

    Examples:
        >>> import pygeohash as pgh
        >>> from pygeohash.viz import plot_geohash
        >>> fig, ax = plot_geohash("9q8yyk")
    """
    ...

def plot_geohashes(geohashes: List[str], ax: Optional[MatplotlibAxis] = ..., colors: Union[str, List[str]] = ..., alpha: float = ..., labels: Optional[List[str]] = ..., show_centers: bool = ..., show_labels: bool = ..., **kwargs: Any) -> Tuple[Optional[MatplotlibFigure], Optional[MatplotlibAxis]]:
    """Plot multiple geohashes on a map.

    Args:
        geohashes: List of geohash strings to plot
        ax: Matplotlib axis to plot on (optional)
        colors: Color or colormap name for the geohashes
        alpha: Transparency of the geohash polygons
        labels: Labels for the geohashes (defaults to the geohash strings)
        show_centers: Whether to show the center points of the geohashes
        show_labels: Whether to show the labels on the map
        \**kwargs: Additional keyword arguments passed to matplotlib

    Returns:
        Tuple: (fig, ax) - The matplotlib figure and axis objects

    Examples:
        >>> import pygeohash as pgh
        >>> from pygeohash.viz import plot_geohashes
        >>> fig, ax = plot_geohashes(["9q8yyk", "9q8yym", "9q8yyj"])
    """
    ...

def add_geohash(self: FoliumMapProtocol, geohash: str, color: str = ..., fill: bool = ..., fill_color: Optional[str] = ..., fill_opacity: float = ..., weight: int = ..., popup: Optional[str] = ..., tooltip: Optional[str] = ...) -> FoliumMapProtocol:
    """Add a geohash to the map."""
    ...

def add_geohashes(self: FoliumMapProtocol, geohashes: List[str], colors: Union[str, List[str]] = ..., fill: bool = ..., fill_colors: Optional[List[str]] = ..., fill_opacity: float = ..., weight: int = ..., popups: Optional[List[str]] = ..., tooltips: Optional[List[str]] = ...) -> FoliumMapProtocol:
    """Add multiple geohashes to the map."""
    ...

def add_geohash_grid(self: FoliumMapProtocol, precision: int = ..., bbox: Optional[BoundingBoxCoords] = ..., color: str = ..., fill: bool = ..., fill_color: Optional[str] = ..., fill_opacity: float = ..., weight: int = ...) -> FoliumMapProtocol:
    """Add a grid of geohashes at the specified precision."""
    ...

def folium_map(center_geohash: Optional[str] = ..., center: Optional[Tuple[float, float]] = ..., zoom_start: int = ..., tiles: str = ..., width: str = ..., height: str = ...) -> Optional[FoliumMapProtocol]:
    """Create a folium map centered on a geohash or coordinates."""
    class GeohashMap(type(m), FoliumMapProtocol):
        ...
    
    

