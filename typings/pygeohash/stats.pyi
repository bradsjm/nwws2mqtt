"""
This type stub file was generated by pyright.
"""

from typing import Final, TypeVar
from pygeohash.types import GeohashCollection, GeohashPrecision

"""Statistical operations for collections of geohashes.

This module provides functions for calculating statistical properties
of collections of geohashes, including mean position, cardinal extremes
(northern, southern, eastern, western), variance, and standard deviation.
"""
logger = ...
__author__: Final[str] = ...
T = TypeVar("T")
def northern(geohashes: GeohashCollection) -> str:
    """Find the northernmost geohash in a collection.

    Args:
        geohashes (GeohashCollection): Collection of geohash strings.

    Returns:
        str: The northernmost geohash.

    Example:
        >>> northern(["u4pruyd", "u4pruyf", "u4pruyc"])
        'u4pruyf'
    """
    ...

def southern(geohashes: GeohashCollection) -> str:
    """Find the southernmost geohash in a collection.

    Args:
        geohashes (GeohashCollection): Collection of geohash strings.

    Returns:
        str: The southernmost geohash.

    Example:
        >>> southern(["u4pruyd", "u4pruyf", "u4pruyc"])
        'u4pruyc'
    """
    ...

def eastern(geohashes: GeohashCollection) -> str:
    """Find the easternmost geohash in a collection.

    Args:
        geohashes (GeohashCollection): Collection of geohash strings.

    Returns:
        str: The easternmost geohash.

    Example:
        >>> eastern(["u4pruyd", "u4pruyf", "u4pruyc"])
        'u4pruyf'
    """
    ...

def western(geohashes: GeohashCollection) -> str:
    """Find the westernmost geohash in a collection.

    Args:
        geohashes (GeohashCollection): Collection of geohash strings.

    Returns:
        str: The westernmost geohash.

    Example:
        >>> western(["u4pruyd", "u4pruyf", "u4pruyc"])
        'u4pruyc'
    """
    ...

def mean(geohashes: GeohashCollection, precision: GeohashPrecision = ...) -> str:
    """Calculate the mean position of a collection of geohashes.

    Args:
        geohashes (GeohashCollection): Collection of geohash strings.
        precision (GeohashPrecision, optional): The precision of the resulting geohash. Defaults to 12.

    Returns:
        str: A geohash representing the mean position.

    Example:
        >>> mean(["u4pruyd", "u4pruyf", "u4pruyc"])
        'u4pruye'
    """
    ...

def variance(geohashes: GeohashCollection) -> float:
    """Calculate the variance of a collection of geohashes.

    This function calculates the mean of squared distances from the mean position
    to each geohash in the collection.

    Args:
        geohashes (GeohashCollection): Collection of geohash strings.

    Returns:
        float: The variance in meters squared.

    Example:
        >>> variance(["u4pruyd", "u4pruyf", "u4pruyc"])
        2500.0
    """
    ...

def std(geohashes: GeohashCollection) -> float:
    """Calculate the standard deviation of a collection of geohashes.

    This function calculates the square root of the variance, which represents
    the average distance from the mean position to each geohash in the collection.

    Args:
        geohashes (GeohashCollection): Collection of geohash strings.

    Returns:
        float: The standard deviation in meters.

    Example:
        >>> std(["u4pruyd", "u4pruyf", "u4pruyc"])
        50.0
    """
    ...

