"""
This type stub file was generated by pyright.
"""

from datetime import datetime, timedelta
from typing import Optional
from pydantic import BaseModel

"""SHEF Data Model."""
class SHEFElement(BaseModel):
    """A PEDTSEP Element."""
    model_config = ...
    station: str = ...
    basevalid: datetime = ...
    valid: datetime = ...
    dv_interval: Optional[timedelta] = ...
    physical_element: str = ...
    duration: str = ...
    type: str = ...
    source: str = ...
    extremum: str = ...
    probability: str = ...
    str_value: str = ...
    num_value: float = ...
    data_created: datetime = ...
    depth: int = ...
    unit_convention: str = ...
    qualifier: str = ...
    comment: str = ...
    narrative: str = ...
    raw: str = ...
    def to_english(self) -> float:
        """Return an English value representation.

        Implementation Note: In the case of wind direction (UH, UR), this
        returns the un-scaled value.
        """
        ...
    
    def varname(self) -> str:
        """Return the Full SHEF Code."""
        ...
    
    def consume_code(self, text): # -> None:
        """Fill out element based on provided text."""
        ...
    
    def lonlat(self): # -> tuple[None, None] | tuple[float, float]:
        """For 'Stranger Locations', return longitude and latitude."""
        ...
    


