"""
This type stub file was generated by pyright.
"""

"""Support NWS VTEC encoding"""
VTEC_RE = ...
VTEC_CLASS = ...
VTEC_ACTION = ...
VTEC_SIGNIFICANCE = ...
VTEC_PHENOMENA = ...
NWS_COLORS = ...
def parse(text): # -> list[VTEC]:
    """I look for and return vtec objects as I find them"""
    ...

def contime(text): # -> datetime | None:
    """Convert text into a UTC datetime."""
    ...

def get_ps_string(phenomena, significance): # -> str:
    """Return the combination of Phenomena + Significance as string"""
    ...

def get_action_string(action): # -> str:
    """Return the action string"""
    ...

class VTEC:
    """A single VTEC encoding instance"""
    def __init__(self, tokens) -> None:
        ...
    
    def s3(self): # -> str:
        """Return a commonly used string representation."""
        ...
    
    def s2(self): # -> str:
        """Return a commonly used string representation."""
        ...
    
    def get_end_string(self, prod): # -> str:
        """Return an appropriate end string for this VTEC"""
        ...
    
    def get_begin_string(self, prod): # -> str:
        """Return an appropriate beginning string for this VTEC"""
        ...
    
    def url(self, year): # -> str:
        """Generate a VTEC url string needed"""
        ...
    
    def get_id(self, year): # -> str:
        """Return a custom string identifier for this VTEC product

        This is used by the Live client
        """
        ...
    
    def __str__(self) -> str:
        """Return string representation"""
        ...
    
    def get_ps_string(self): # -> str:
        """Return the combination of Phenomena + Significance as string"""
        ...
    
    def get_action_string(self): # -> str:
        """Return the action string"""
        ...
    
    def product_string(self): # -> str:
        """Return the combination of action and phenomena+significance"""
        ...
    


