"""
This type stub file was generated by pyright.
"""

from pyiem.nws.product import TextProduct

"""NWS Hydrological Markup Language

Attempt to break up the HML product into atomic data

"""
DELIMITER = ...
def no999(val): # -> None:
    """No negative -999 or -9999 please."""
    ...

def parseUTC(s): # -> datetime | None:
    """Parse an ISO-ish string into UTC timestamp"""
    ...

def parse_xml(token): # -> HMLData:
    """Attempt to parse the XML into something useful"""
    ...

class HMLData:
    """Our data object."""
    def __init__(self) -> None:
        """Constructor."""
        ...
    


class HML(TextProduct):
    """Class for parsing and representing Space Wx Products"""
    def __init__(self, text, utcnow=..., ugc_provider=..., nwsli_provider=...) -> None:
        """constructor"""
        ...
    
    def do_sql_observed(self, cursor, _hml): # -> None:
        """Process the observed portion of the dataset"""
        ...
    
    def do_sql_forecast(self, cursor, _hml): # -> None:
        """Process the forecast portion of the dataset"""
        ...
    
    def sql(self, cursor): # -> None:
        """Persist this information to the database"""
        ...
    
    def parsing(self): # -> None:
        """Attempt to parse out what we have found"""
        ...
    
    def __str__(self) -> str:
        """string representation"""
        ...
    


def parser(buf, utcnow=..., ugc_provider=..., nwsli_provider=...): # -> HML:
    """Parse a HML NOAAPort product

    This may have multiple xml documents inside.

    Args:
      buf (str): What we want to parse
    """
    ...

