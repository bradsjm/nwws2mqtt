"""
This type stub file was generated by pyright.
"""

from pyiem.nws.product import TextProduct

"""
Supports parsing of Storm Prediction Center's MCD and
parsing of Weather Prediction Center's MPD
"""
CORRECTION = ...
LATLON = ...
DISCUSSIONNUM = ...
WATCH_PROB = ...
VALID_TIME = ...
CONCERNING = ...
class MCDProduct(TextProduct):
    """
    Represents a Storm Prediction Center Mesoscale Convective Discussion
    """
    def __init__(self, text, utcnow=..., ugc_provider=..., nwsli_provider=...) -> None:
        """constructor"""
        ...
    
    def parse_correction(self) -> bool:
        """Look for the correction flag."""
        ...
    
    def find_valid_times(self): # -> tuple[None, None] | tuple[datetime | Any, datetime | Any]:
        """Figure out when this product is valid for"""
        ...
    
    def find_watch_probability(self): # -> int | None:
        """Find the probability of watch issuance for SPC MCD"""
        ...
    
    def tweet(self): # -> str:
        """Return twitter message"""
        ...
    
    def get_url(self): # -> str:
        """Return the URL for SPC's website"""
        ...
    
    def parse_areas_affected(self): # -> None:
        """Return the areas affected"""
        ...
    
    def get_jabbers(self, uri, _uri2=...): # -> list[list[str | dict[str, str]]]:
        """Return plain text and html variants for a Jabber msg

        Args:
          uri (str): URL number one needed for constructing the URI
          _uri2 (str): not used, but needed for the over-ride

        Returns:
          (list): List of lists, plain text, html text, xtra dict
        """
        ...
    
    def parse_concerning(self): # -> Any | None:
        """Figure out the concerning text, if it exists."""
        ...
    
    def parse_discussion_num(self): # -> int:
        """Figure out what discussion number this is"""
        ...
    
    def parse_geometry(self): # -> Polygon:
        """Find the polygon that's in this MCD product"""
        ...
    
    def database_save(self, txn): # -> None:
        """Save this product to the database"""
        ...
    


def parser(text, utcnow=..., ugc_provider=..., nwsli_provider=...): # -> MCDProduct:
    """Helper function"""
    ...

